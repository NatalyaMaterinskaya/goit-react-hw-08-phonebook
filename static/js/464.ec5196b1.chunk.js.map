{"version":3,"file":"static/js/464.ec5196b1.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","helpers.js","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/ContactsPage.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectvisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n","import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding: 16px 16px;\n  border: 2px solid #000000;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 24px;\n`;\n\nexport const StyledField = styled(Field)`\n  max-width: 200px;\n  padding: 4px 8px;\n  font-size: 20px;\n  border-radius: 4px;\n\n  &:focus {\n    outline: none;\n    border: 1px solid #34a2cd;\n    box-shadow: 0px 0px 4px 4px #34a2cd;\n  }\n`;\n\nexport const StyledErrorMessage = styled(ErrorMessage)`\n  color: #da7b6a;\n  font-size: 18px;\n`;\n\nexport const Btn = styled.button`\n  max-width: 130px;\n  padding: 4px 8px;\n  border: 1px solid #536be4;\n  border-radius: 4px;\n  font-size: 18px;\n  background-color: #536be4;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { isExist } from 'helpers';\nimport {\n  StyledForm,\n  Label,\n  StyledField,\n  StyledErrorMessage,\n  Btn,\n} from './ContactForm.styled';\n\n\nconst nameRegex =\n  \"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\";\nconst numberRegex =\n  '\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}';\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(70, 'Too Long!')\n    .trim('Enter your name, please')\n    .matches(nameRegex, 'Name is not valid')\n    .required('Required'),\n  phone: Yup.string()\n    .matches(numberRegex, 'Phone number is not valid')\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        if (isExist(contacts, values.name)) {\n          alert(`${values.name} is already in contacts.`);\n          return;\n        }\n        dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <StyledField name=\"name\" type=\"text\" />\n          <StyledErrorMessage name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Number\n          <StyledField name=\"number\" type=\"tel\" />\n          <StyledErrorMessage name=\"number\" component=\"div\" />\n        </Label>\n        <Btn type=\"submit\">Add contact</Btn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","export const isExist = (arr, name) =>\n  arr.find(item => item.name.toLowerCase() === name.toLowerCase());\n","import styled from 'styled-components';\n\nexport const Text = styled.span`\n  display: inline-block;\n  margin-right: 20px;\n`;\n\nexport const Btn = styled.button`\n  padding: 4px 8px;\n  border: 1px solid #000000;\n  border-radius: 4px;\n  background-color: #ffffff;\n  font-size: 18px;\n\n  &:hover,\n  &:focus {\n    background-color: #3151f5;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/operations';\nimport { Text, Btn } from './ContactItem.styled';\n\nexport const ContactItem = ({ contact: { id, name, number } }) => {\n  const dispach = useDispatch();\n  const handleDelete = () => dispach(deleteContact(id));\n  return (\n    <>\n      <Text>{name}</Text>\n      <Text>{number}</Text>\n      <Btn type=\"button\" onClick={handleDelete}>\n        Delete\n      </Btn>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.objectOf(PropTypes.string).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-left: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  list-style-position: inside;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 24px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectvisibleContacts } from 'redux/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List, ListItem } from './ContactList.styled';\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectvisibleContacts);\n\n  return (\n    <List>\n      {contacts?.map(contact => (\n        <ListItem key={contact.id}>\n          <ContactItem contact={contact} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 24px;\n`;\n\nexport const Input = styled.input`\n  max-width: 200px;\n  padding: 4px 8px;\n  font-size: 20px;\n  border-radius: 4px;\n\n  &:focus {\n    outline: none;\n    border: 1px solid #34a2cd;\n    box-shadow: 0px 0px 4px 4px #34a2cd;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\nimport { changeFilter } from 'redux/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleChangeFilter = evt => {\n    dispatch(changeFilter(evt.target.value));\n  };\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={handleChangeFilter} />\n    </Label>\n  );\n};\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/operations\";\nimport { selectContacts, selectError, selectIsLoading } from \"redux/selectors\";\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n      <div>\n        {!error && (\n          <>\n            <h1>Phonebook</h1>\n            <ContactForm />\n          </>\n        )}\n        {isLoading ? (\n          <Loader />\n        ) : (\n          contacts.length > 0 &&\n          !error && (\n            <>\n              <h2>Contacts</h2>\n              <Filter />\n              <ContactList />\n            </>\n          )\n        )}\n        {error && !isLoading && <p>Oops! Something went wrong!</p>}\n      </div>\n  );\n};\n\n\nexport default ContactsPage;"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectvisibleContacts","contact","toLowerCase","includes","StyledForm","styled","Form","Label","StyledField","Field","StyledErrorMessage","ErrorMessage","Btn","schema","Yup","shape","min","max","trim","matches","required","phone","ContactForm","dispatch","useDispatch","useSelector","initialValues","number","validationSchema","onSubmit","values","actions","arr","item","alert","addContact","resetForm","type","component","Text","ContactItem","id","dispach","onClick","deleteContact","List","ListItem","ContactList","Input","Filter","onChange","evt","changeFilter","target","useEffect","fetchContacts","Loader"],"sourceRoot":""}